version: '3.8'

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.9.28-alpine
    ports:
      - 5672:5672

  ordersdb:
    container_name: ordersdb
    image: postgres:13-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ordersdb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    

  billingdb:
    container_name: billingdb
    image: postgres:13-alpine
    ports:
      - 5434:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: billingdb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    
  gateway:
    container_name: api-gateway
    build:
      dockerfile: ./apps/api-gateway/Dockerfile
    env_file:
      - ./apps/api-gateway/prisma/.env
    command: npm run start:dev api-gateway
    volumes:
      - ./apps/api-gateway/src:/usr/app/src
      - /usr/app/node_modules
    ports:
      - 3000:3000  

  orders:
    container_name: orders
    build:
      dockerfile: ./apps/orders/Dockerfile
    command: sh -c "npx prisma migrate deploy --schema ./prisma/schema.prisma  && npm run start:dev orders"
    env_file:
      - ./apps/orders/prisma/.env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@ordersdb:5432/ordersdb?schema=public
    depends_on:
      ordersdb:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      gateway:
        condition: service_started 
    volumes:
      - ./apps/orders/src:/usr/app/src
      - /usr/app/node_modules
    ports:
      - 3001:3001
  
  billing:
    container_name: billing
    build:
      dockerfile: ./apps/billing/Dockerfile
    command: sh -c "npx prisma migrate deploy --schema ./prisma/schema.prisma && npm run start:dev billing"
    env_file:
      - ./apps/billing/prisma/.env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@billingdb:5432/billingdb?schema=public
    depends_on:
      billingdb:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      gateway:
        condition: service_started
    volumes:
      - ./apps/billing/src:/usr/app/src
      - /usr/app/node_modules
  

